;
; Dynamic item classification and processing rules
; ================================================
;
; Contains the ruleset for item classification.
;
;        |========================================================================
;        |                                                                       |
;        |           >>> WARNING: THIS IS THE DEFAULT RULES FILE. <<<            |
;        |                                                                       |
;        | You should not edit this file without good reason,                    |
;        | as it will be overwritten when you install new ComplexSorter updates. |
;        | You should use the "Rules (User)\rules-processing.ini" file,          |
;        | which also have highest priority in rules order.                      |
;        |=======================================================================|
;
; Foreword
; --------
;   Maybe just take a look at the existing rules.
;   If you have some technical experience, you should feel familiar quickly.
;
;
; Format
; ------
;   The section is the target record type, e.g. [WEAP] for weapons.
;   Each line represents one rule.
;   The part before "=" contains the conditions - See Conditions
;   The part after "=" is the internal TagIdent (or some "SPECIAL:") - See TagIdent
;   Lines beginning with ";" are comments. So you can write notes or just make a rule inactive.
;
; Conditions
; ----------
;   The rules have a mighty set of possible matching tests, you can check for most everything available in FO4Edit.
;
;   Syntax for a LINE: [Condition 1], [Condition 2],... = [TagIdent]
;      ALL conditions must match to apply the TagIdent. When a TagIdent is found, the ruleset will stops.
;
;   Syntax for a [Condition]: (not) [Property] [CompareOperator] (Value)
;       - Example: KEYWORDS contains "ObjectTypeWater" = drink
;           - Description: If the item has the keyword "ObjectTypeWater", it gets the TagIdent "drink".
;       - Possible [Property]: MANY. Look at FO4Edit. Examples: KEYWORDS, EFFECTS, EDID, "Full - Name", "ENIT\Sound - Consume"...
;           - TIP: Many property names in FO4Edit have a short form. So "PTRN" is the same as "PTRN - Preview Transform".
;                  Sometimes FO4Edit has inconsequent naming, like the "Model\MODL - FileName" can only access by "Model\MODL". You just have to try to find the correct identifer...
;           - KEYWORDS and EFFECTS are special properties for easy checking of contained keywords. (But no partial text match here!)
;       - Possible [CompareOperator]: All operators can combined with pre-operator "not"
;             equals, exists, contains,  beginsWith, numEquals, greaterThan, lessThan, hasFlag, hasOnlyFlags
;         - Some operators only work on correct types, e.g. hasFlag only works for the "Flags"-Type.
;         - Operator "exists" have no third parameter "(Value)".
;       - Possible [Value]: All you can find in FO4Edit. If the value contains whitespaces it must be "quoted".
;         - You can type in multiple values separated by "|". The [Condition] is true, if any of its values matches (also for op. "equals").
;
;    2) Special conditions (Note: Have no CompareOperator or Value)
;         - SPECIAL:MasterESP allows you to apply rules based on the source Master-ESP file.
;         - SPECIAL:IsArmor    - Is true for apparel that is classified as armor by Complex Sorter.
;
;    3) "*" - Match anything, so it gets applied always.
;
; TagIdent
; --------
;   The TagIdent refers to tags.ini, which will determine the final [Tag].
;   Example: The TagIdent "HuntingRifle" will be converted the tag "[HuntingRifle]" for the FallUI tag set.
;            And for the Ruddy88 Original Set it will be converted to the tag "[Ranged]".
;
;   Special TagIdents (functions)
;         - SPECIAL:FindCustomTag:*  - Starts a sub-call to the naming rules, searching for a more precise item tag. Rules continue if nothing is found.
;         - SPECIAL:AddKeyword:*     - Add a keyword to the record
;         - SPECIAL:RemoveINRD       - Removes the INRD entry from the record.
;
; Rules priority (first applied first)
; --------------
; 1) User's custom rules for a mod           from "Rules (User)\[Mod].ini"
; 2) User's custom rules           from THIS FILE "Rules (User)\rules-processing.ini"
; 3) Default rules for mods                  from "Rules (Mods)\[Mod].ini"
; 4) Default rules                           from "Rules (Default)\rules-processing.ini"
;
; Section priority
; ----------------
; The [ALL]-Section is processed AFTER the [RECORD TYPE]-section
;
; TIPS
; ----
; * For quick testing select only one or two record type(s) in the GUI.
;    - This just updates the selected records and leave the others as they are.
; * Try the Ctrl+Y hotkey for quick starting Complex Sorter in FO4Edit.
;     - After the GUI is visible, the "Generate"-button is focues, so you can start the generation instantly by pressing ENTER
; * If you want to share your rules with other players, make them language-independent (just dont use "Full - Name")
;   and as specific as possible (EDID is for example unique for a item, while matching a keyword can match many other items).


;        |========================================================================
;        |                                                                       |
;        |           >>> WARNING: THIS IS THE DEFAULT RULES FILE. <<<            |
;        |                                                                       |
;        | You should not edit this file without good reason,                    |
;        | as it will be overwritten when you install new ComplexSorter updates. |
;        | You should use the "Rules (User)\rules-processing.ini" file,          |
;        | which also have highest priority in rules order.                      |
;        |=======================================================================|


; ====================
; MAIN Prefilter rules
; ====================
; Will applied before any further actions. - IGNORE will filter the item.

[prefilter:ALL]
not "FULL" exists = IGNORE


[prefilter:ARMO]
"Record Header\Record Flags\Non-Playable" equals 1 = IGNORE


[prefilter:AMMO]
"Record Header\Record Flags\Non-Playable" equals 1 = IGNORE


[prefilter:ALCH]
;"Record Header\Data Size" greaterThan 10000 = IGNORE_SHOW
EDID beginsWith HC_, KEYWORDS contains HC_EffectType_Adrenaline|HC_EffectType_Disease|HC_IconColor_Red|HC_EffectType_Hunger|HC_EffectType_Sleep|HC_EffectType_Thirst = IGNORE
EDID beginsWith HC_, EDID equals HC_Effect_Caffeinated = IGNORE
not "Model\MODL" exists = IGNORE


[prefilter:LVLI]
not ONAM exists = IGNORE
; Keep INNR, will be filteres by "Drop-No-Name" otherwise
* = KEEP


[prefilter:WEAP]
"Record Header\Record Flags\Non-Playable" equals 1 = IGNORE
not "Model\MODL" exists = IGNORE


[prefilter:INNR]
; Keep INNR, will be filteres by "Drop-No-Name" otherwise
* = KEEP

[prefilter:QUST]
; No rules for QUST for now
* = IGNORE

; =====================
; MAIN Processing rules
; =====================

[ALCH]
KEYWORDS contains ObjectTypeAlcohol, PTRN contains "Food_BeerBottle" = beer
KEYWORDS contains ObjectTypeAlcohol = liquor
KEYWORDS contains ObjectTypeSyringerAmmo = syringer
KEYWORDS contains ChemTypeStealthBoy = stealthboy
;ENIT\Addiction contains AbAddictionAlcohol, PTRN contains "Food_BeerBottle" = beer
;ENIT\Addiction contains AbAddictionAlcohol = liquor
KEYWORDS contains ObjectTypeWater|ObjectTypeDrink|ObjectTypeNukaCola = drink
"ENIT\Sound - Consume" contains HumanDrink|DLC03NPCHumanChemsSludgePack = drink
;EDID contains SkillMag = skillmag
KEYWORDS contains ObjectTypeStimpak = stimpak
EFFECTS contains RestoreHealthFood, EFFECTS contains DamageRadiationChem = radfood
EFFECTS contains RestoreHealthFood = food
"ENIT\Sound - Consume" contains NPCHumanEatMentats|NPCHumanChems, "ENIT\Addiction Chance" greaterThan 0 = chem
"ENIT\Sound - Consume" contains NPCHumanEatMentats|NPCHumanChems, EFFECTS contains DamageRadiationChem = chem
"ENIT\Sound - Consume" contains NPCHumanEatMentats|NPCHumanChems = aid
EDID contains "Bandage|Trauma|First Aid|FirstAid" = aid
KEYWORDS contains FoodEffect|HC_DiseaseRisk_FoodVeryHigh|HC_DiseaseRisk_FoodLow|HC_DiseaseRisk_FoodHigh|HC_DiseaseRisk_FoodStandard|FruitOrVegetable|ObjectTypeFood, EFFECTS contains DamageRadiationChem = radfood
KEYWORDS contains FoodEffect|HC_DiseaseRisk_FoodVeryHigh|HC_DiseaseRisk_FoodLow|HC_DiseaseRisk_FoodHigh|HC_DiseaseRisk_FoodStandard|FruitOrVegetable|ObjectTypeFood = food
KEYWORDS contains ObjectTypeStimpak|ObjectTypeChem|CA_ObjType_ChemBad|HC_CausesImmunodeficiency|HC_SustenanceType_IncreasesHunger, "ENIT\Addiction Chance" greaterThan 0 = chem
KEYWORDS contains ObjectTypeStimpak|ObjectTypeChem|CA_ObjType_ChemBad|HC_CausesImmunodeficiency|HC_SustenanceType_IncreasesHunger = aid
EDID contains HC_, "ENIT\Addiction Chance" greaterThan 0 = chem
EDID contains HC_ = aid
"ENIT - Effect Data\Flags" hasFlag Medicine = aid
; Custom ESP
SPECIAL:MasterESP equals MK_Agony|SurvivalistFirstAid, KEYWORDS contains HC_IconColor_Red|HC_IconColor_Yellow =
* = other_alch


[AMMO]
"DNAM - DNAM\Flags" hasFlag "Has Count Based 3D", not "DNAM - DNAM\Projectile" contains BroadsiderProjectile = ammo_caliber
EDID contains AmmoFusionCore = ammo_fusioncore
EDID contains AmmoAlienBlaster|Ammo2mmEC|AmmoFusionCell|AmmoPlasmaCartridge|AmmoGammaCell = ammo_energy
* = ammo


[ARMO]
; Special keywords:
;  BP as short for "BOD2 - Biped Body Template\First Person Flags"
;  BPNotFace - contains all flags of BP which are not in head region
; Special processing: If the apparel classified as "armor" then TagIdent e.g. "helm" will prefer "helm-armor" if exists. Same for "clothes".

; Abort for INRD entry
INRD:link:EDID equals dn_PowerArmor|dn_DLC04_PowerArmor_Quantum|DLC01dn_PowerArmor|dn_DLC04_PowerArmor_Overboss =

; Non human
KEYWORDS contains playerCannotEquip = non_human
not SPECIAL:recordHasHumanRace = non_human

; Power armor
KEYWORDS contains ArmorTypePower = powerarmor

; Sets
KEYWORDS contains dn_armor_RaiderMod = set_raider
KEYWORDS contains dn_armor_Leather|ma_armor_Leather_Torso|ma_armor_Leather_Arm = set_leather
KEYWORDS contains dn_armor_Metal = set_metal
KEYWORDS contains dn_armor_Marine|DLC03_dn_armor_Marine = set_marine
KEYWORDS contains dn_armor_Combat = set_combat
KEYWORDS contains dn_armor_Synth = set_synth
EDID beginsWith "Armor_DCGuard_" = set_dcguard

; Covering only one body part
SPECIAL:IsArmor, BP:flagsCount numEquals 1, BP hasFlag "41 - [A] Torso|42 - [A] L Arm|43 - [A] R Arm|44 - [A] L Leg|45 - [A] R Leg" = set_generic
BP:flagsCount numEquals 1, BP hasFlag "30 - Hair Top|31 - Hair Long" = helm
BP:flagsCount numEquals 1, BP hasFlag "46 - Headband|48 - Beard|49 - Mouth" = mask
BP:flagsCount numEquals 1, BP hasFlag "47 - Eyes" = eyes
BP:flagsCount numEquals 1, BP hasFlag "50 - Neck" = neck
BP:flagsCount numEquals 1, BP hasFlag "51 - Ring" = ring
BP:flagsCount numEquals 1, BP hasFlag "41 - [A] Torso" = fullBody
BP:flagsCount numEquals 1, BP hasFlag "54 - Unnamed|55 - Unnamed|56 - Unnamed|57 - Unnamed" = unknown
BP:flagsCount numEquals 1, BP hasFlag "37 - [U] L Arm|42 - [A] L Arm" = arml
BP:flagsCount numEquals 1, BP hasFlag "38 - [U] R Arm|43 - [A] R Arm" = armr
BP:flagsCount numEquals 1, BP hasFlag "39 - [U] L Leg|44 - [A] L Leg" = legl
BP:flagsCount numEquals 1, BP hasFlag "40 - [U] R Leg|45 - [A] R Leg" = legr
BP:flagsCount numEquals 1, BP hasFlag "33 - BODY|36 - [U] Torso|41 - [A] Torso" = torso

; Heuristic rules for body coverage
BP:flagsCount numEquals 2, BP hasFlag "30 - Hair Top", BP hasFlag "46 - Headband" = helm
BP:flagsCount numEquals 2, BP hasFlag "30 - Hair Top", BP hasFlag "31 - Hair Long" = helm
BP:flagsCount numEquals 3, BP hasFlag "30 - Hair Top", BP hasFlag "31 - Hair Long", BP hasFlag "46 - Headband" = helm
BP:flagsCount numEquals 4, BP hasFlag "46 - Headband", BP hasFlag "47 - Eyes", BP hasFlag "48 - Beard", BP hasFlag "49 - Mouth" = gasmask
BP:flagsCount greaterThan 1, BP hasOnlyFlags "46 - Headband|47 - Eyes|48 - Beard|49 - Mouth|50 - Neck" = mask
BP:flagsCount numEquals 2, BP hasFlag "46 - Headband", BP hasFlag "47 - Eyes" = eyes
BP hasFlag "30 - Hair Top", BP hasFlag "47 - Eyes", BPNotFace:flagsCount numEquals 0 = helmfull
BP hasFlag "30 - Hair Top|31 - Hair Long", BPNotFace:flagsCount numEquals 0 = helm
not SPECIAL:IsArmor, BP:flagsCount numEquals 6, BP hasFlag "33 - BODY", BP hasFlag "37 - [U] L Arm", BP hasFlag "38 - [U] R Arm", BP hasFlag "41 - [A] Torso", BP hasFlag "44 - [A] L Leg", BP hasFlag "45 - [A] R Leg" = dress
BP:flagsCount lessThan 3, BP hasOnlyFlags "34 - L Hand|35 - R Hand|37 - [U] L Arm|38 - [U] R Arm|42 - [A] L Arm|43 - [A] R Arm" = gloves
not SPECIAL:IsArmor, BP:flagsCount numEquals 4, BP hasFlag "33 - BODY", BP hasFlag "41 - [A] Torso", BP hasFlag "44 - [A] L Leg", BP hasFlag "45 - [A] R Leg" = dress

; Full Armors
BP hasFlag "33 - BODY|36 - [U] Torso|41 - [A] Torso",BP hasFlag "37 - [U] L Arm|38 - [U] R Arm|42 - [A] L Arm|43 - [A] R Arm",BP hasFlag "39 - [U] L Leg|40 - [U] R Leg|44 - [A] L Leg|45 - [A] R Leg", KEYWORDS contains "VaultSuitKeyword" = fullBody_vault
BP hasFlag "33 - BODY|36 - [U] Torso|41 - [A] Torso",BP hasFlag "37 - [U] L Arm|38 - [U] R Arm|42 - [A] L Arm|43 - [A] R Arm",BP hasFlag "39 - [U] L Leg|40 - [U] R Leg|44 - [A] L Leg|45 - [A] R Leg", not BP hasFlag "41 - [A] Torso|42 - [A] L Arm|43 - [A] R Arm|42 - [A] L Arm|43 - [A] R Arm" = underwear
BP hasFlag "33 - BODY|36 - [U] Torso|41 - [A] Torso",BP hasFlag "37 - [U] L Arm|38 - [U] R Arm|42 - [A] L Arm|43 - [A] R Arm",BP hasFlag "39 - [U] L Leg|40 - [U] R Leg|44 - [A] L Leg|45 - [A] R Leg" = fullBody

; All other
SPECIAL:IsArmor = armor
* = clothes

[BOOK]
EDID contains "Password" = password
KEYWORDS contains PerkMagKeyword = perkmag
"INAM - Inventory Art" contains "HighPoly_SurgicalJournal01 [STAT:001D1CB4]" = perkmag
"Model\MODL" equals "Props\NewspaperPublickOccurencesLowPoly.nif" = notePubOcc
* = note


[KEYM]
EDID contains Password|TerminalKey|DN135_GwinnettBreweryKey = password
"Model\MODL - Model Filename" contains "Props\Holotape_Prop.nif|card" = passcard
EDID contains Keycard|CardKey = passcard
* = key


[LVLI]
* = unique


[MISC]
PTRN equals "MiscMod01 [TRNS:00248769]" = mod
KEYWORDS contains ObjectTypeLooseMod = mod
;* = SPECIAL:DeleteEndTag
;"CVPA - Components" exists, not PTRN beginsWith Component = SPECIAL:AddComponentTags
EDID contains "Bottle|NukaColaEmpty|BeerGwinnett" ,EDID contains Empty = bottle
;"CVPA - Components" exists, SPECIAL:IsValuable, not EDID contains shipment = valuable
"CVPA - Components" exists, EDID contains token|ticket|Medallion|Money|Cash|Dollar|Caps001 = currency
"CVPA - Components" exists, PTRN beginsWith Component = resource
"CVPA - Components" exists = scrap
"FULL - Name" contains "Camping" = camping
KEYWORDS contains BobbleheadKeyword = bobblehead
EDID contains token|ticket|Medallion|Money|Cash|Dollar|Caps001 = currency
PTRN contains DLC05FireworkTransform|DLC05FireworkFlareTransform = ammo
PTRN contains DLC06MiscPipboy = pipboy
EDID contains Bobbypin = lockpick
EDID contains Note|Schematic|Recipe|Newspaper|Map|Blueprint|Flyer|Holotape|Formula|Plans = noteMisc
PTRN contains Note|Schematic|Recipe|Newspaper|Map|Blueprint|Flyer|Holotape|Formula|Plans = noteMisc
EDID contains MiscModel|MiscLunch|Signed|Model|FFDiamondCity06Card|FFDiamondCity06CatcherMitt|FFDiamondCity06Baseball = collectible
PTRN contains MiscModel|MiscLunch|Signed|Model = collectible
PTRN contains MiscIDCard = passcard
;SPECIAL:IsValuable, not EDID contains shipment = valuable
EDID beginsWith BookBurnt|ComicBurnt|MagazineBurnt|FolderPapers = trash
not "Model\MODL - Model Filename" equals "Props\NoteRipped_LowPoly.nif" = other


[NOTE]
PTRN contains MiscHolotapeGame = hologame
"DNAM - Type" equals Voice|Sound = holotape_voice
; Fetch custom mod holotape of type program and terminal
not SPECIAL:MasterESP equals Fallout4|DLCRobot|DLCworkshop01|DLCCoast|DLCworkshop02|DLCworkshop02|DLCNukaWorld = holotape_custom_mod
"DNAM - Type" equals Program = holotape_program
"DNAM - Type" equals Terminal = holotape_terminal
* = holotape


[WEAP]
; No Model surely wont displayed in inventory
; Special case for weapons: Will only saved if no INRD and no fixed named object template was found
KEYWORDS contains AnimsFatManBomb = ammo
"DNAM - Data\Animation Type" equals Grenade = grenade
"DNAM - Data\Animation Type" equals Mine = mine
; Dismiss some special tags used by custom mod not meant for combat (like tools in SS, SS2)
"DNAM - Data\Flags" hasFlag "Not Used In Normal Combat" =

; Search in naming rules for more accurate tagging of weapon type (through SPECIAL:FindCustomTag:*)
; Note: The standard naming rules will always find anything ([Ranged] or [Melee]) - so you should add
; your custom entries above
"DNAM - Data\Animation Type" equals HandToHandMelee|OneHandAxe|OneHandDagger|OneHandMace|OneHandSword|TwoHandAxe|TwoHandSword = SPECIAL:FindCustomTag:_custom_naming_no_innr_melee
"DNAM - Data\Animation Type" equals Bow|Gun|Staff = SPECIAL:FindCustomTag:_custom_naming_no_innr_weapons
* = other
