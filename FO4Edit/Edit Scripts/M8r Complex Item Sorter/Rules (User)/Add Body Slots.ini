[Plugin]
; The plugin ID must be unique and contain no whitespaces.

; Active by default
activeDefault = false

; Author
author = m8r98a4f2

; Cacheable
cachable = true

; Description of the plugin
desc = Adds the body slot numbers in brackets to apparel item names. E.g.: Change ""Colonial Duster" to "Colonial Duster [33|34|35]". This is 
id = cpp_addbodyslots

; Plugin name
name = Add Body Slot Numbers
requiredRecordTypes = ARMO+INNR

; Type of plugin
type = pluginRecordModifier
visibleDefault = false


; Processing rules added by (active) plugin
[PluginRulesAfterMatch:ARMO]
not SPECIAL:TagIdent equals "" = PluginScript:AddBodySlots

; Script like actions for applying a more complex modification where a simple rule isn't enough
; Note: Because of the ini base of this file every part before "=" must be unique. So this is accomplished by using
;       LINE* as name. Keep in mind: The number is no sorter - the script is executed in the order defined here.

[PluginScript:AddBodySlots]
; 	Check count above 0
10 = if count:record."BOD2 - Biped Body Template\First Person Flags" = 0 then "end"
; Begin adding body slot numberss to name
20 = set $newName = record."FULL - Name" . $sStartTag
30 = foreach flags:record."BOD2 - Biped Body Template\First Person Flags" as $index => $bodySlotFlag
40 = 	if $index > 0 then "set $newName = $newName . $sSeparator"
50 =    modset $bodySlotFlag = PregReplace $bodySlotFlag "((?<=\d)\D.*)" ""
60 = 	set $newName = $newName . $bodySlotFlag
70 = endforeach
; 	Set generated name to record
80 = set record."FULL - Name" = $sEndTag . $newName

[PluginSettings]
; Options configurable by user in the GUI.

; Layout elements of the gui form
_description1 = form:text:Configuration of added body slots.
sEndTag = setting:string:]:End tag
sSeparator = setting:string:|:Separator

sStartTag = setting:string: [:Start tag
